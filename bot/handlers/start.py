# bot/handlers/start.py
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
# –ò–ú–ü–û–†–¢–ò–†–£–ï–ú get_supabase –∏–∑ bot.database.core
from bot.database.core import create_user_if_not_exists, get_supabase

logger = logging.getLogger(__name__)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏
main_keyboard = [
    ["ü§ñ –û –±–æ—Ç–µ", "üìù –ê–Ω–∫–µ—Ç–∞", "üì® –û–±—Ä–∞—â–µ–Ω–∏–µ"],
    ["üêç –ó–º–µ–π–∫–∞", "üé° –ë–∞—Ä–∞–±–∞–Ω", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
]
reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–Ω
        user_id = update.effective_user.id
        # –ò–°–ü–û–õ–¨–ó–£–ï–ú get_supabase, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞
        supabase = get_supabase()
        # –ü–†–ê–í–ò–õ–¨–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º response.data
        response = supabase.table('users').select('is_banned, banned_features').eq('user_id', user_id).execute()
        
        if response.data:  # <- –ü–†–ê–í–ò–õ–¨–ù–û: –ø—Ä–æ–≤–µ—Ä—è–µ–º response.data, –∞ –Ω–µ response.
            user_data = response.data[0]
            if user_data.get('is_banned'):
                await update.message.reply_text("‚ùå –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
                return
            
            banned_features = user_data.get('banned_features', [])
            if 'all' in banned_features:
                await update.message.reply_text("‚ùå –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
                return
            elif 'anketa' in banned_features and 'appeal' in banned_features:
                await update.message.reply_text("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—ã –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è.")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –±–µ–∑ —ç—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫
                limited_keyboard = [
                    ["ü§ñ –û –±–æ—Ç–µ"],
                    ["üêç –ó–º–µ–π–∫–∞", "üé° –ë–∞—Ä–∞–±–∞–Ω", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
                ]
                limited_reply_markup = ReplyKeyboardMarkup(limited_keyboard, resize_keyboard=True)
                await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=limited_reply_markup)
                return
            elif 'anketa' in banned_features:
                await update.message.reply_text("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—ã.")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –∞–Ω–∫–µ—Ç—ã
                limited_keyboard = [
                    ["ü§ñ –û –±–æ—Ç–µ", "üì® –û–±—Ä–∞—â–µ–Ω–∏–µ"],
                    ["üêç –ó–º–µ–π–∫–∞", "üé° –ë–∞—Ä–∞–±–∞–Ω", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
                ]
                limited_reply_markup = ReplyKeyboardMarkup(limited_keyboard, resize_keyboard=True)
                await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=limited_reply_markup)
                return
            elif 'appeal' in banned_features:
                await update.message.reply_text("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è.")
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è
                limited_keyboard = [
                    ["ü§ñ –û –±–æ—Ç–µ", "üìù –ê–Ω–∫–µ—Ç–∞"],
                    ["üêç –ó–º–µ–π–∫–∞", "üé° –ë–∞—Ä–∞–±–∞–Ω", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
                ]
                limited_reply_markup = ReplyKeyboardMarkup(limited_keyboard, resize_keyboard=True)
                await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=limited_reply_markup)
                return
        
        # –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logger.info(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {update.effective_user.username}, ID: {update.effective_user.id}")
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º/–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        user = update.effective_user
        # create_user_if_not_exists —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å get_supabase, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤–Ω—É—Ç—Ä–∏
        db_user = await create_user_if_not_exists(user)
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω. DB result: {db_user is not None}")
        welcome_text = """
–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –°—Ç–∞—Ä–ª–∏.
–ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω–∞—Å –∏ –æ —Å–µ–±–µ
‚Ä¢ –ü—Ä–∏–Ω—è—Ç—å —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É –≤ —Å–∫–≤–∞–¥
‚Ä¢ –ü–µ—Ä–µ–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
‚Ä¢ –ò–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –∏–≥—Ä—ã!
–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é –Ω–∏–∂–µ ‚Üì
        """
        sent_message = await update.message.reply_text(welcome_text, reply_markup=reply_markup)
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}. Message ID: {sent_message.message_id}")
    except Exception as e:
        logger.exception(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}: {e}")
        # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        try:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        except:
            pass
