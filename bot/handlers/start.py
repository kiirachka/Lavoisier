# bot/handlers/start.py
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from bot.database.core import create_user_if_not_exists

logger = logging.getLogger(__name__) # –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–≥–µ—Ä, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏
main_keyboard = [
    ["ü§ñ –û –±–æ—Ç–µ", "üìù –ê–Ω–∫–µ—Ç–∞", "üì® –û–±—Ä–∞—â–µ–Ω–∏–µ"],
    ["üêç –ó–º–µ–π–∫–∞", "üé° –ë–∞—Ä–∞–±–∞–Ω", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]
]
reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º/–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        user = update.effective_user
        await create_user_if_not_exists(user)
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

        welcome_text = """
–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –°—Ç–∞—Ä–ª–∏.

–ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –Ω–∞—Å –∏ –æ —Å–µ–±–µ
‚Ä¢ –ü—Ä–∏–Ω—è—Ç—å —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É –≤ —Å–∫–≤–∞–¥
‚Ä¢ –ü–µ—Ä–µ–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
‚Ä¢ –ò–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –∏–≥—Ä—ã!

–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é –Ω–∏–∂–µ ‚Üì
        """
        await update.message.reply_text(welcome_text, reply_markup=reply_markup)
        logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}")
    except Exception as e:
        logger.exception(f"üí• –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}: {e}")
