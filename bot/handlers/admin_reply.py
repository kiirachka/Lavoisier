# bot/handlers/admin_reply.py
import os
import re
import logging
from telegram import Update
from telegram.ext import ContextTypes
from bot.database.core import get_supabase

logger = logging.getLogger(__name__)

async def handle_admin_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É/–æ–±—Ä–∞—â–µ–Ω–∏–µ."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not update.message.reply_to_message:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω
    admin_ids = [int(x.strip()) for x in os.getenv("ADMIN_IDS", "").split(",") if x.strip().isdigit()]
    if update.effective_user.id not in admin_ids:
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
    original_message = update.message.reply_to_message.text
    if not original_message:
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "üÜî ID: 123456789")
    user_id_match = re.search(r"üÜî ID: (\d+)", original_message)
    if not user_id_match:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        return

    user_id = int(user_id_match.group(1))
    admin_reply_text = update.message.text

    # --- –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ---
    supabase = get_supabase()
    user_check_response = supabase.table('users').select('is_banned, banned_features').eq('user_id', user_id).execute()
    if user_check_response.data:
        user_data = user_check_response.data[0]
        if user_data.get('is_banned') or 'all' in user_data.get('banned_features', []):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
            await update.message.reply_text("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            return # –∏–ª–∏ –ª–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ò–Ø ---

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (–∞–Ω–∫–µ—Ç–∞ –∏–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ)
    message_type = "–∞–Ω–∫–µ—Ç—É" if "üìã –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞!" in original_message else "–æ–±—Ä–∞—â–µ–Ω–∏–µ"
    if "üì¨ –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!" in original_message:
        message_type = "–æ–±—Ä–∞—â–µ–Ω–∏–µ"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_message = (
        f"üëÄ *–í–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ!*\n"
        f"–ê–¥–º–∏–Ω –¥–∞–ª –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É {message_type}:\n"
        f"\"{admin_reply_text}\"\n"
        f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å –Ω–∞–º–∏! üôè"
    )

    try:
        await context.bot.send_message(
            chat_id=user_id,
            text=user_message,
            parse_mode="Markdown"
        )
        await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
